--- Drop Primary Key
DECLARE @t NVARCHAR(512), @sql NVARCHAR(MAX),@table varchar(100)

SELECT @table = N'dbo.EntMenuRights';

SELECT @sql = 'ALTER TABLE ' + @table 
    + ' DROP CONSTRAINT ' + name + ';'
    FROM sys.key_constraints
    WHERE [type] = 'PK'
    AND [parent_object_id] = OBJECT_ID(@table);

EXEC sp_executeSQL @sql;

---- Create Composite Primary Key
ALTER TABLE entbookings
ADD CONSTRAINT PK_EntMenuRights PRIMARY KEY (UserTypeId,PageTitle,BranchId,WorkshopUserType)


----------------- 5.2

------------- Process Master

DECLARE @t NVARCHAR(512), @sql NVARCHAR(MAX),@table varchar(100)

SELECT @table = N'dbo.processmaster';

SELECT @sql = 'ALTER TABLE ' + @table 
    + ' DROP CONSTRAINT ' + name + ';'
    FROM sys.key_constraints
    WHERE [type] = 'PK'
    AND [parent_object_id] = OBJECT_ID(@table);

EXEC sp_executeSQL @sql;

ALTER TABLE processmaster
ALTER COLUMN ProcessCode varchar(15) not null

---- Create Composite Primary Key
ALTER TABLE ProcessMaster
ADD CONSTRAINT PK_ProcessMaster PRIMARY KEY (ProcessCode,ProcessName,BranchId)

----------------- Item Wise Process Rate

DECLARE @t1 NVARCHAR(512), @sql1 NVARCHAR(MAX),@table1 varchar(100)

SELECT @table1 = N'dbo.ItemWiseProcessRate';

SELECT @sql1 = 'ALTER TABLE ' + @table1 
    + ' DROP CONSTRAINT ' + name + ';'
    FROM sys.key_constraints
    WHERE [type] = 'PK'
    AND [parent_object_id] = OBJECT_ID(@table1);

EXEC sp_executeSQL @sql1;

ALTER TABLE ItemWiseProcessRate
ALTER COLUMN ProcessCode varchar(15) not null

---- Create Composite Primary Key
ALTER TABLE ItemWiseProcessRate
ADD CONSTRAINT PK_ItemWiseProcessRate PRIMARY KEY (ItemName,ProcessCode,BranchId,RateListId)


------------- 5.4

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE FUNCTION [dbo].[udf_TitleCase] (@InputString VARCHAR(max) )
RETURNS VARCHAR(max)
AS
BEGIN
DECLARE @Index INT
DECLARE @Char CHAR(1)
DECLARE @OutputString VARCHAR(255)
SET @OutputString = LOWER(@InputString)
SET @Index = 2
SET @OutputString =
STUFF(@OutputString, 1, 1,UPPER(SUBSTRING(@InputString,1,1)))
WHILE @Index <= LEN(@InputString)
BEGIN
SET @Char = SUBSTRING(@InputString, @Index, 1)
IF @Char IN (' ', ';', ':', '!', '?', ',', '.', '_', '-', '/', '&','''','(')
IF @Index + 1 <= LEN(@InputString)
BEGIN
IF @Char != ''''
OR
UPPER(SUBSTRING(@InputString, @Index + 1, 1)) != 'S'
SET @OutputString =
STUFF(@OutputString, @Index + 1, 1,UPPER(SUBSTRING(@InputString, @Index + 1, 1)))
END
SET @Index = @Index + 1
END
RETURN ISNULL(@OutputString,'')
END

GO
